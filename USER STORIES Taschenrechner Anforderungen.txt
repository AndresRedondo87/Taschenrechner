----------------------------
USER STORIES Taschenrechner Anforderungen

Titel: Beenden
Story: Als Benutzer möchte ich "fertig" anstelle einer weiteren Zahl eingeben, um den Taschenrechner zu beenden.
Akzepzanzkriterien:
	-Taschenrechner wird beendet sobald "Fertig" (in dieser Schreibweise) eingegeben wird.
	-Es gibt einen entsprechenden Hinweis, dass der Benutzer weiss mit welchen Kommando er den Taschenrechner Beenden kann.
Status:
	-Offen


Titel: Fortlaufende Berechnung
Story: Als Benutzer möchte ich eine weitere Zahl eingeben, um die vorherige Operation nochmals auszuführen mit den vorherigen Resultat.
Akzeptanzkriterien:
	-Gleitkommazahlen zwischen -10,0 und 100,0 konnen eingegeben werden
	-Die Operation aus der vorherigen Berechnung wird nochmals verwendet
	Das neue Resultat wird ausgegeben ohne weitere Interaktion mit den Benutzer
Status:
	-Offen



Titel: Objektorientierung
Story: Als Entwickler möchte ich die Anwendung objektorientiert entwickeln, um spaeter einfach weitere funktionalitaeten hinzufuegen zu koennen
Akzeptanzkriterien:
	-Die Aufteilung der Funktionalitaeten auf  Klassen folgt dem Prinzip Separation of Concerns (SoC)
	-Bei der Erstellung von Klassen und Methoden wird das Prinzip Don´t Repeat Yourself (DRY) eingehalten
Hinweis:
	-Diese Story ist eine Erweiterung zu Story "Softwarestruktur"
Status:
	-Umgesetzt
	-Teilweise Erledigt (kann natuerlich noch verbessert werden[video 85])


------------------------
Titel: Softwarestruktur
Story: Als Entwickler möchte ich  den Quellcode sauber strukturieren, um spaeter einfach  weitere funktionalitaeten hinzufuegen zu können.
Akzeptanzkriterien:
	-das Single Level of Abstraction Prinzip (wird spaeter erklaert)wird eingehalten, oder eine Abweichung ist begruendet und dokumentiert	
Status:
	-Umgesetzt
	-Erledigt


----------------------------------------------------------------------------------------------------------------------------------------------------------
Titel: Substrahieren
Story: Als Benutzer möchte ich mit gleitkommazahlen Substrahieren zu können.
Akzeptanzkriterien:
	-Gleitkommazahlen können Substrahiert werden(zwischen -10.0 und 100.0).
Status:
	-Umgesetzt
	-Getestet
	-Erledigt

	Titel: Multiplizieren und teilen
Story: Als Benutzer möchte ich mit gleitkommazahlen Multiplizieren und teilen zu können.
Akzeptanzkriterien:
	-Gleitkommazahlen können Multiplizieret und geteilt werden(zwischen -10.0 und 100.0).
Status:
	-Umgesetzt
	-Getestet
	-Erledigt 

------------------------------------------------

Titel: Addieren mit Gleitkommazahlen (unter Iteration1)
Story: Als Benutzer möchte ich mit gleitkommazahlen addieren zu können.
Akzeptanzkriterien:
	-Gleitkommazahlen können addiert werden(zwischen -10.0 und 100.0).
Status:
	-Implementiert
	-Getestet
	-Erledigt
		
Titel: Addieren
Story:Als Benutzer möchte ich zwei Zahlen eingeben, um deren Summe berechnen zu lassen
Akzeptanzkriterien:
	-Zahlen zwischen 0 und 10 können addiert werden.
	[- erweiterung als Beispiel: Zahlen in HEX eingeben können]
Status:
	-Implementiert
	-Getestet
	-Erledigt

Titel: Starten
Story: Als Benutzer möchte ich den Taschenrechner schnell aufrufen können, um mein Resultat schnell zu bekommen
Akzeptanzkriterien:
	-Die Anwendung wird innerhalb von 2 Sekunden auf einem Rechner gestartet
	-Die Anwendung läuft auf einem Rechner mit Windows 10
Status:
	-Implementiert
	-Getestet
	-Erledigt

------------------------------------------------------------
User Story vorlage: als <Rolle/Anwendertyp> möchte ich <Ziel/Wunsch/Funktion>, um <Nutzen>

--Erst die Rolle bzw. Anwendertypen feststellen (Benutzer, Administrator, Servicetechniker...) 
--Dann Ziel/Wunsch/Funktion, was wir implementieren wollen.
-- und Warum wollen wir es implementieren. Das kann hilfreich seinn beim mehrere Aufgaben.

Titel: Titel
Story: Als <Rolle/Anwendertyp> möchte ich <Ziel/Wunsch/Funktion>, um <Nutzen>
Akzeptanzkriterien:
	-Mussen erfüllt werden.